<?php

namespace App\Models;

use App\Enums\OrderEnum;
use App\Traits\HasPaginationTrait;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\Relations\BelongsTo;

class Order extends Model
{
    use HasPaginationTrait;

//    public static function boot()
//    {
//        parent::boot(); // TODO: Change the autogenerated stub
//
//        $shipping_company = ShippingCompany::first();
//
//        self::creating(function ($user) use ($shipping_company) {
//            $user->shipping_company_id = $shipping_company->id;
//        });
//
//    }

    public function user(): BelongsTo
    {
        return $this->belongsTo(User::class);
    }

    public function userSeller(): BelongsTo
    {
        return $this->belongsTo(Seller::class, 'user_seller_id', 'id');
    }

    public function seller(): BelongsTo
    {
        return $this->belongsTo(Seller::class, 'seller_id', 'id');
    }

    public function shippingCompany(): BelongsTo
    {
        return $this->belongsTo(ShippingCompany::class, 'shipping_company_id', 'id');
    }

    public function shippingDelivery(): BelongsTo
    {
        return $this->belongsTo(ShippingDelivery::class, 'shipping_delivery_id', 'id');
    }

    public function orderItems(): HasMany
    {
        return $this->hasMany(OrderItem::class);
    }

    public function histories(): HasMany
    {
        return $this->hasMany(OrderHistory::class);
    }

    public function statusText(): string
    {
        return match ($this->status) {
            OrderEnum::NEW_ORDER->name => "<span class='badge badge-info'>" . __('New Order') . '</span>',
            OrderEnum::IN_REVIEW->name => "<span class='badge badge-primary'>" . __('In Review') . '</span>',
            OrderEnum::COMPLETED->name => "<span class='badge badge-success'>" . __('Completed') . '</span>',
            OrderEnum::CANCELED->name => "<span class='badge badge-danger'>" . __('Canceled') . '</span>',
        };
    }

    public function expectsStatus($status = null)
    {
        if (is_null($status)) {
            return [
                'status' => true,
            ];
        }

        switch ($status) {
            case 'IN_REVIEW':
                if ($this->status === OrderEnum::COMPLETED->value || $this->status === OrderEnum::CANCELED->value) {
                    return [
                        'status' => false,
                        'message' => 'لا يمكن قبول الطلب لأنه مكتمل!',
                    ];
                } elseif ($this->status === OrderEnum::IN_DELIVERY->value || $this->status === OrderEnum::IN_THE_WAY->value) {
                    return [
                        'status' => false,
                        'message' => 'الطلب لدي شركة الشحن',
                    ];
                }elseif ($this->status === OrderEnum::IN_REVIEW->value) {
                    return [
                        'status' => false,
                        'message' => 'تم قبول الطلب وهو تحت المراجعة',
                    ];
                }

                break;

            case 'READY_TO_DELIVERY':
                if ($this->status === OrderEnum::NEW_ORDER->value) {
                    return [
                        'status' => false,
                        'message' => 'يجب قبول الطلب قبل تسليمه لشركة النقل',
                    ];
                } elseif ($this->status === OrderEnum::COMPLETED->value || $this->status === OrderEnum::CANCELED->value) {
                    return [
                        'status' => false,
                        'message' => 'لا يمكن قبول الطلب لأنه مكتمل!',
                    ];
                } elseif ($this->status === OrderEnum::IN_DELIVERY->value || $this->status === OrderEnum::IN_THE_WAY->value) {
                    return [
                        'status' => false,
                        'message' => 'الطلب لدي شركة الشحن',
                    ];
                }elseif ($this->status === OrderEnum::READY_TO_DELIVERY->value) {
                    return [
                        'status' => false,
                        'message' => 'تم ارسال الطلب إلى شركة النقل',
                    ];
                }

                break;

            case 'IN_THE_WAY':
            case 'IN_DELIVERY':
                if ($this->status === OrderEnum::COMPLETED->value || $this->status === OrderEnum::CANCELED->value) {
                    return [
                        'status' => false,
                        'message' => 'لا يمكن قبول الطلب لأنه مكتمل!',
                    ];
                }

                break;

            case 'COMPLETED':
                if ($this->status === OrderEnum::CANCELED->value) {
                    return [
                        'status' => false,
                        'message' => 'لا يمكن تسليم الطلب لانه ملغي',
                    ];
                }
                break;

        }

        return [
            'status' => true,
        ];
    }
}
